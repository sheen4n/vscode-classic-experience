{
    "name": "vscode-classic-experience",
    "displayName": "VSCode Keybindings for Cursor",
    "version": "0.0.29",
    "description": "Restore familiar VSCode keybindings in Cursor editor. Smooth transition for VSCode users.",
    "publisher": "YuTengjing",
    "private": true,
    "preview": true,
    "author": {
        "name": "YuTengjing",
        "email": "ytj2713151713@gmail.com",
        "url": "https://github.com/tjx666/tjx666"
    },
    "license": "SEE LICENSE IN LICENSE",
    "homepage": "https://github.com/tjx666/vscode-classic-experience/blob/master/README.md",
    "repository": {
        "type": "git",
        "url": "https://github.com/tjx666/vscode-classic-experience"
    },
    "bugs": {
        "url": "https://github.com/tjx666/vscode-classic-experience/issues",
        "email": "ytj2713151713@gmail.com"
    },
    "keywords": [
        "keybindings",
        "keymap",
        "importer",
        "settings",
        "cursor"
    ],
    "categories": [
        "Keymaps"
    ],
    "main": "./out/src/extension.js",
    "icon": "assets/logo.png",
    "packageManager": "pnpm@9.9.0",
    "engines": {
        "vscode": "^1.90.0"
    },
    "badges": [
        {
            "url": "https://img.shields.io/badge/PRs-welcome-brightgreen.svg",
            "description": "PRs Welcome",
            "href": "https://github.com/tjx666/vscode-classic-experience/fork"
        }
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "contributes": {
        "keybindings": [
            {
                "key": "cmd+r cmd+c",
                "command": "-editor.action.addCommentLine",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+r cmd+f",
                "command": "-editor.action.formatSelection",
                "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+r cmd+d",
                "command": "-editor.action.moveSelectionToNextFindMatch",
                "when": "editorFocus"
            },
            {
                "key": "cmd+r alt+cmd+down",
                "command": "-editor.action.nextCommentingRange",
                "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
            },
            {
                "key": "cmd+r alt+cmd+up",
                "command": "-editor.action.previousCommentingRange",
                "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
            },
            {
                "key": "cmd+r cmd+u",
                "command": "-editor.action.removeCommentLine",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+r f12",
                "command": "-editor.action.revealDefinitionAside",
                "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
            },
            {
                "key": "cmd+r cmd+f12",
                "command": "-editor.action.revealDefinitionAside",
                "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
            },
            {
                "key": "cmd+r cmd+k",
                "command": "-editor.action.selectFromAnchorToCursor",
                "when": "editorTextFocus && selectionAnchorSet"
            },
            {
                "key": "cmd+r cmd+b",
                "command": "-editor.action.setSelectionAnchor",
                "when": "editorTextFocus"
            },
            {
                "key": "cmd+r cmd+i",
                "command": "-editor.action.showHover",
                "when": "editorTextFocus"
            },
            {
                "key": "cmd+r cmd+x",
                "command": "-editor.action.trimTrailingWhitespace",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+r cmd+,",
                "command": "-editor.createFoldingRangeFromSelection",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+i",
                "command": "-editor.debug.action.showDebugHover",
                "when": "editorTextFocus && inDebugMode"
            },
            {
                "key": "cmd+r cmd+0",
                "command": "-editor.foldAll",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+/",
                "command": "-editor.foldAllBlockComments",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+-",
                "command": "-editor.foldAllExcept",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+8",
                "command": "-editor.foldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+1",
                "command": "-editor.foldLevel1",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+2",
                "command": "-editor.foldLevel2",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+3",
                "command": "-editor.foldLevel3",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+4",
                "command": "-editor.foldLevel4",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+5",
                "command": "-editor.foldLevel5",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+6",
                "command": "-editor.foldLevel6",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+7",
                "command": "-editor.foldLevel7",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+[",
                "command": "-editor.foldRecursively",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+.",
                "command": "-editor.removeManualFoldingRanges",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+l",
                "command": "-editor.toggleFold",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r shift+cmd+l",
                "command": "-editor.toggleFoldRecursively",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+j",
                "command": "-editor.unfoldAll",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+=",
                "command": "-editor.unfoldAllExcept",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+9",
                "command": "-editor.unfoldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+]",
                "command": "-editor.unfoldRecursively",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r f2",
                "command": "-togglePeekWidgetFocus",
                "when": "inReferenceSearchEditor || referenceSearchVisible"
            },
            {
                "key": "cmd+r alt+cmd+c",
                "command": "-workbench.action.addComment"
            },
            {
                "key": "cmd+r cmd+g",
                "command": "-aiFeedback.action.open"
            },
            {
                "key": "cmd+r alt+cmd+c",
                "command": "-copyFilePath",
                "when": "editorFocus"
            },
            {
                "key": "cmd+r shift+alt+cmd+c",
                "command": "-copyRelativeFilePath",
                "when": "editorFocus"
            },
            {
                "key": "cmd+r cmd+k",
                "command": "-editor.action.defineKeybinding",
                "when": "resource == 'vscode-userdata:/Users/yutengjing/Library/Application%20Support/Cursor/User/keybindings.json'"
            },
            {
                "key": "cmd+r i",
                "command": "-inlineChat.start",
                "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
            },
            {
                "key": "cmd+r cmd+a",
                "command": "-keybindings.editor.addKeybinding",
                "when": "inKeybindings && keybindingFocus"
            },
            {
                "key": "cmd+r cmd+e",
                "command": "-keybindings.editor.defineWhenExpression",
                "when": "inKeybindings && keybindingFocus"
            },
            {
                "key": "cmd+r cmd+i",
                "command": "-list.showHover",
                "when": "listFocus && !inputFocus && !treestickyScrollFocused"
            },
            {
                "key": "cmd+r i",
                "command": "-notebook.cell.chat.start",
                "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
            },
            {
                "key": "cmd+r cmd+c",
                "command": "-notebook.cell.collapseCellInput",
                "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
            },
            {
                "key": "cmd+r t",
                "command": "-notebook.cell.collapseCellOutput",
                "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
            },
            {
                "key": "cmd+r cmd+c",
                "command": "-notebook.cell.expandCellInput",
                "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
            },
            {
                "key": "cmd+r t",
                "command": "-notebook.cell.expandCellOutput",
                "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
            },
            {
                "key": "cmd+r shift+cmd+\\",
                "command": "-notebook.cell.split",
                "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
            },
            {
                "key": "cmd+r y",
                "command": "-notebook.cell.toggleOutputScrolling",
                "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
            },
            {
                "key": "cmd+r shift+cmd+n",
                "command": "-notifications.showList"
            },
            {
                "key": "cmd+r cmd+w",
                "command": "-workbench.action.closeAllEditors"
            },
            {
                "key": "cmd+r shift+cmd+w",
                "command": "-workbench.action.closeAllGroups"
            },
            {
                "key": "cmd+r w",
                "command": "-workbench.action.closeEditorsInGroup"
            },
            {
                "key": "cmd+r f",
                "command": "-workbench.action.closeFolder",
                "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
            },
            {
                "key": "cmd+r u",
                "command": "-workbench.action.closeUnmodifiedEditors"
            },
            {
                "key": "cmd+r shift+o",
                "command": "-workbench.action.compareEditor.openSide",
                "when": "inDiffEditor"
            },
            {
                "key": "cmd+r o",
                "command": "-workbench.action.copyEditorToNewWindow",
                "when": "activeEditor"
            },
            {
                "key": "cmd+r m",
                "command": "-workbench.action.editor.changeLanguageMode",
                "when": "!notebookEditorFocused"
            },
            {
                "key": "cmd+r p",
                "command": "-workbench.action.files.copyPathOfActiveFile"
            },
            {
                "key": "cmd+r r",
                "command": "-workbench.action.files.revealActiveFileInWindows"
            },
            {
                "key": "cmd+r s",
                "command": "-workbench.action.files.saveWithoutFormatting"
            },
            {
                "key": "cmd+r cmd+up",
                "command": "-workbench.action.focusAboveGroup"
            },
            {
                "key": "cmd+r cmd+down",
                "command": "-workbench.action.focusBelowGroup"
            },
            {
                "key": "cmd+r cmd+left",
                "command": "-workbench.action.focusLeftGroup"
            },
            {
                "key": "cmd+r cmd+right",
                "command": "-workbench.action.focusRightGroup"
            },
            {
                "key": "cmd+r shift+cmd+\\",
                "command": "-workbench.action.joinEditorInGroup",
                "when": "sideBySideEditorActive"
            },
            {
                "key": "cmd+r enter",
                "command": "-workbench.action.keepEditor"
            },
            {
                "key": "cmd+r down",
                "command": "-workbench.action.moveActiveEditorGroupDown"
            },
            {
                "key": "cmd+r left",
                "command": "-workbench.action.moveActiveEditorGroupLeft"
            },
            {
                "key": "cmd+r right",
                "command": "-workbench.action.moveActiveEditorGroupRight"
            },
            {
                "key": "cmd+r up",
                "command": "-workbench.action.moveActiveEditorGroupUp"
            },
            {
                "key": "cmd+r shift+cmd+left",
                "command": "-workbench.action.moveEditorLeftInGroup"
            },
            {
                "key": "cmd+r shift+cmd+right",
                "command": "-workbench.action.moveEditorRightInGroup"
            },
            {
                "key": "cmd+r cmd+q",
                "command": "-workbench.action.navigateToLastEditLocation"
            },
            {
                "key": "cmd+r alt+cmd+right",
                "command": "-workbench.action.nextEditorInGroup"
            },
            {
                "key": "cmd+r cmd+s",
                "command": "-workbench.action.openGlobalKeybindings"
            },
            {
                "key": "cmd+r shift+enter",
                "command": "-workbench.action.pinEditor",
                "when": "!activeEditorIsPinned"
            },
            {
                "key": "cmd+r alt+cmd+left",
                "command": "-workbench.action.previousEditorInGroup"
            },
            {
                "key": "cmd+r cmd+t",
                "command": "-workbench.action.selectTheme"
            },
            {
                "key": "cmd+r cmd+\\",
                "command": "-workbench.action.splitEditorDown"
            },
            {
                "key": "cmd+r shift+cmd+\\",
                "command": "-workbench.action.splitEditorInGroup",
                "when": "activeEditorCanSplitInGroup"
            },
            {
                "key": "cmd+r cmd+\\",
                "command": "-workbench.action.splitEditorLeft"
            },
            {
                "key": "cmd+r cmd+\\",
                "command": "-workbench.action.splitEditorOrthogonal"
            },
            {
                "key": "cmd+r cmd+\\",
                "command": "-workbench.action.splitEditorRight"
            },
            {
                "key": "cmd+r cmd+\\",
                "command": "-workbench.action.splitEditorUp"
            },
            {
                "key": "cmd+r cmd+i",
                "command": "-workbench.action.terminal.focusHover",
                "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
            },
            {
                "key": "cmd+r cmd+m",
                "command": "-workbench.action.toggleMaximizeEditorGroup",
                "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
            },
            {
                "key": "cmd+r z",
                "command": "-workbench.action.toggleZenMode",
                "when": "!isAuxiliaryWindowFocusedContext"
            },
            {
                "key": "cmd+r shift+enter",
                "command": "-workbench.action.unpinEditor",
                "when": "activeEditorIsPinned"
            },
            {
                "key": "cmd+r c",
                "command": "-workbench.files.action.compareWithClipboard"
            },
            {
                "key": "cmd+r d",
                "command": "-workbench.files.action.compareWithSaved"
            },
            {
                "key": "cmd+r e",
                "command": "-workbench.files.action.focusOpenEditorsView",
                "when": "workbench.explorer.openEditorsView.active"
            },
            {
                "key": "cmd+r down",
                "command": "-views.moveViewDown",
                "when": "focusedView != ''"
            },
            {
                "key": "cmd+r left",
                "command": "-views.moveViewLeft",
                "when": "focusedView != ''"
            },
            {
                "key": "cmd+r right",
                "command": "-views.moveViewRight",
                "when": "focusedView != ''"
            },
            {
                "key": "cmd+r up",
                "command": "-views.moveViewUp",
                "when": "focusedView != ''"
            },
            {
                "key": "cmd+r cmd+c",
                "command": "--editor.action.addCommentLine",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+r cmd+f",
                "command": "--editor.action.formatSelection",
                "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+r cmd+d",
                "command": "--editor.action.moveSelectionToNextFindMatch",
                "when": "editorFocus"
            },
            {
                "key": "cmd+r alt+cmd+down",
                "command": "--editor.action.nextCommentingRange",
                "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
            },
            {
                "key": "cmd+r alt+cmd+up",
                "command": "--editor.action.previousCommentingRange",
                "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
            },
            {
                "key": "cmd+r cmd+u",
                "command": "--editor.action.removeCommentLine",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+r f12",
                "command": "--editor.action.revealDefinitionAside",
                "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
            },
            {
                "key": "cmd+r cmd+f12",
                "command": "--editor.action.revealDefinitionAside",
                "when": "false"
            },
            {
                "key": "cmd+r cmd+k",
                "command": "--editor.action.selectFromAnchorToCursor",
                "when": "editorTextFocus && selectionAnchorSet"
            },
            {
                "key": "cmd+r cmd+b",
                "command": "--editor.action.setSelectionAnchor",
                "when": "editorTextFocus"
            },
            {
                "key": "cmd+r cmd+i",
                "command": "--editor.action.showHover",
                "when": "editorTextFocus"
            },
            {
                "key": "cmd+r cmd+x",
                "command": "--editor.action.trimTrailingWhitespace",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+r cmd+,",
                "command": "--editor.createFoldingRangeFromSelection",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+i",
                "command": "--editor.debug.action.showDebugHover",
                "when": "editorTextFocus && inDebugMode"
            },
            {
                "key": "cmd+r cmd+0",
                "command": "--editor.foldAll",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+/",
                "command": "--editor.foldAllBlockComments",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+-",
                "command": "--editor.foldAllExcept",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+8",
                "command": "--editor.foldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+1",
                "command": "--editor.foldLevel1",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+2",
                "command": "--editor.foldLevel2",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+3",
                "command": "--editor.foldLevel3",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+4",
                "command": "--editor.foldLevel4",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+5",
                "command": "--editor.foldLevel5",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+6",
                "command": "--editor.foldLevel6",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+7",
                "command": "--editor.foldLevel7",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+[",
                "command": "--editor.foldRecursively",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+.",
                "command": "--editor.removeManualFoldingRanges",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+l",
                "command": "--editor.toggleFold",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r shift+cmd+l",
                "command": "--editor.toggleFoldRecursively",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+j",
                "command": "--editor.unfoldAll",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+=",
                "command": "--editor.unfoldAllExcept",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+9",
                "command": "--editor.unfoldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r cmd+]",
                "command": "--editor.unfoldRecursively",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+r f2",
                "command": "--togglePeekWidgetFocus",
                "when": "inReferenceSearchEditor || referenceSearchVisible"
            },
            {
                "key": "cmd+r alt+cmd+c",
                "command": "--workbench.action.addComment"
            },
            {
                "key": "cmd+r cmd+g",
                "command": "--aiFeedback.action.open"
            },
            {
                "key": "cmd+r alt+cmd+c",
                "command": "--copyFilePath",
                "when": "editorFocus"
            },
            {
                "key": "cmd+r shift+alt+cmd+c",
                "command": "--copyRelativeFilePath",
                "when": "editorFocus"
            },
            {
                "key": "cmd+r cmd+k",
                "command": "--editor.action.defineKeybinding",
                "when": "resource == 'vscode-userdata:/Users/yutengjing/Library/Application%20Support/Cursor/User/keybindings.json'"
            },
            {
                "key": "cmd+r i",
                "command": "--inlineChat.start",
                "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
            },
            {
                "key": "cmd+r cmd+a",
                "command": "--keybindings.editor.addKeybinding",
                "when": "inKeybindings && keybindingFocus"
            },
            {
                "key": "cmd+r cmd+e",
                "command": "--keybindings.editor.defineWhenExpression",
                "when": "inKeybindings && keybindingFocus"
            },
            {
                "key": "cmd+r cmd+i",
                "command": "--list.showHover",
                "when": "listFocus && !inputFocus && !treestickyScrollFocused"
            },
            {
                "key": "cmd+r i",
                "command": "--notebook.cell.chat.start",
                "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
            },
            {
                "key": "cmd+r cmd+c",
                "command": "--notebook.cell.collapseCellInput",
                "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
            },
            {
                "key": "cmd+r t",
                "command": "--notebook.cell.collapseCellOutput",
                "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
            },
            {
                "key": "cmd+r cmd+c",
                "command": "--notebook.cell.expandCellInput",
                "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
            },
            {
                "key": "cmd+r t",
                "command": "--notebook.cell.expandCellOutput",
                "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
            },
            {
                "key": "cmd+r shift+cmd+\\",
                "command": "--notebook.cell.split",
                "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
            },
            {
                "key": "cmd+r y",
                "command": "--notebook.cell.toggleOutputScrolling",
                "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
            },
            {
                "key": "cmd+r shift+cmd+n",
                "command": "--notifications.showList"
            },
            {
                "key": "cmd+r cmd+w",
                "command": "--workbench.action.closeAllEditors"
            },
            {
                "key": "cmd+r shift+cmd+w",
                "command": "--workbench.action.closeAllGroups"
            },
            {
                "key": "cmd+r w",
                "command": "--workbench.action.closeEditorsInGroup"
            },
            {
                "key": "cmd+r f",
                "command": "--workbench.action.closeFolder",
                "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
            },
            {
                "key": "cmd+r u",
                "command": "--workbench.action.closeUnmodifiedEditors"
            },
            {
                "key": "cmd+r shift+o",
                "command": "--workbench.action.compareEditor.openSide",
                "when": "inDiffEditor"
            },
            {
                "key": "cmd+r o",
                "command": "--workbench.action.copyEditorToNewWindow",
                "when": "activeEditor"
            },
            {
                "key": "cmd+r m",
                "command": "--workbench.action.editor.changeLanguageMode",
                "when": "!notebookEditorFocused"
            },
            {
                "key": "cmd+r p",
                "command": "--workbench.action.files.copyPathOfActiveFile"
            },
            {
                "key": "cmd+r r",
                "command": "--workbench.action.files.revealActiveFileInWindows"
            },
            {
                "key": "cmd+r s",
                "command": "--workbench.action.files.saveWithoutFormatting"
            },
            {
                "key": "cmd+r cmd+up",
                "command": "--workbench.action.focusAboveGroup"
            },
            {
                "key": "cmd+r cmd+down",
                "command": "--workbench.action.focusBelowGroup"
            },
            {
                "key": "cmd+r cmd+left",
                "command": "--workbench.action.focusLeftGroup"
            },
            {
                "key": "cmd+r cmd+right",
                "command": "--workbench.action.focusRightGroup"
            },
            {
                "key": "cmd+r shift+cmd+\\",
                "command": "--workbench.action.joinEditorInGroup",
                "when": "sideBySideEditorActive"
            },
            {
                "key": "cmd+r enter",
                "command": "--workbench.action.keepEditor"
            },
            {
                "key": "cmd+r down",
                "command": "--workbench.action.moveActiveEditorGroupDown"
            },
            {
                "key": "cmd+r left",
                "command": "--workbench.action.moveActiveEditorGroupLeft"
            },
            {
                "key": "cmd+r right",
                "command": "--workbench.action.moveActiveEditorGroupRight"
            },
            {
                "key": "cmd+r up",
                "command": "--workbench.action.moveActiveEditorGroupUp"
            },
            {
                "key": "cmd+r shift+cmd+left",
                "command": "--workbench.action.moveEditorLeftInGroup"
            },
            {
                "key": "cmd+r shift+cmd+right",
                "command": "--workbench.action.moveEditorRightInGroup"
            },
            {
                "key": "cmd+r cmd+q",
                "command": "--workbench.action.navigateToLastEditLocation"
            },
            {
                "key": "cmd+r alt+cmd+right",
                "command": "--workbench.action.nextEditorInGroup"
            },
            {
                "key": "cmd+r cmd+s",
                "command": "--workbench.action.openGlobalKeybindings"
            },
            {
                "key": "cmd+r shift+enter",
                "command": "--workbench.action.pinEditor",
                "when": "!activeEditorIsPinned"
            },
            {
                "key": "cmd+r alt+cmd+left",
                "command": "--workbench.action.previousEditorInGroup"
            },
            {
                "key": "cmd+r cmd+t",
                "command": "--workbench.action.selectTheme"
            },
            {
                "key": "cmd+r cmd+\\",
                "command": "--workbench.action.splitEditorDown"
            },
            {
                "key": "cmd+r shift+cmd+\\",
                "command": "--workbench.action.splitEditorInGroup",
                "when": "activeEditorCanSplitInGroup"
            },
            {
                "key": "cmd+r cmd+\\",
                "command": "--workbench.action.splitEditorLeft"
            },
            {
                "key": "cmd+r cmd+\\",
                "command": "--workbench.action.splitEditorOrthogonal"
            },
            {
                "key": "cmd+r cmd+\\",
                "command": "--workbench.action.splitEditorRight"
            },
            {
                "key": "cmd+r cmd+\\",
                "command": "--workbench.action.splitEditorUp"
            },
            {
                "key": "cmd+r cmd+i",
                "command": "--workbench.action.terminal.focusHover",
                "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
            },
            {
                "key": "cmd+r cmd+m",
                "command": "--workbench.action.toggleMaximizeEditorGroup",
                "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
            },
            {
                "key": "cmd+r z",
                "command": "--workbench.action.toggleZenMode",
                "when": "!isAuxiliaryWindowFocusedContext"
            },
            {
                "key": "cmd+r shift+enter",
                "command": "--workbench.action.unpinEditor",
                "when": "activeEditorIsPinned"
            },
            {
                "key": "cmd+r c",
                "command": "--workbench.files.action.compareWithClipboard"
            },
            {
                "key": "cmd+r d",
                "command": "--workbench.files.action.compareWithSaved"
            },
            {
                "key": "cmd+r e",
                "command": "--workbench.files.action.focusOpenEditorsView",
                "when": "workbench.explorer.openEditorsView.active"
            },
            {
                "key": "cmd+r down",
                "command": "--views.moveViewDown",
                "when": "focusedView != ''"
            },
            {
                "key": "cmd+r left",
                "command": "--views.moveViewLeft",
                "when": "focusedView != ''"
            },
            {
                "key": "cmd+r right",
                "command": "--views.moveViewRight",
                "when": "focusedView != ''"
            },
            {
                "key": "cmd+r up",
                "command": "--views.moveViewUp",
                "when": "focusedView != ''"
            },
            {
                "key": "cmd+k",
                "command": "-workbench.action.terminal.clear",
                "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
            },
            {
                "key": "cmd+k",
                "command": "--workbench.action.terminal.clear",
                "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
            },
            {
                "key": "cmd+k",
                "command": "--composer.startComposerPrompt",
                "when": "composerIsEnabled"
            },
            {
                "key": "cmd+k",
                "command": "--aipopup.action.modal.generate",
                "when": "editorFocus && !composerBarIsVisible && !composerControlPanelIsVisible",
                "args": {
                    "invocationType": "new"
                }
            },
            {
                "key": "cmd+k",
                "command": "--cursorai.action.generateInTerminal",
                "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
            },
            {
                "key": "cmd+k",
                "command": "-composer.startComposerPrompt",
                "when": "composerIsEnabled"
            },
            {
                "key": "cmd+k",
                "command": "-aipopup.action.modal.generate",
                "when": "editorFocus && !composerBarIsVisible && !composerControlPanelIsVisible",
                "args": {
                    "invocationType": "new"
                }
            },
            {
                "key": "cmd+k",
                "command": "-cursorai.action.generateInTerminal",
                "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
            },
            {
                "key": "cmd+k cmd+c",
                "command": "editor.action.addCommentLine",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+k cmd+f",
                "command": "editor.action.formatSelection",
                "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+k cmd+d",
                "command": "editor.action.moveSelectionToNextFindMatch",
                "when": "editorFocus"
            },
            {
                "key": "cmd+k alt+cmd+down",
                "command": "editor.action.nextCommentingRange",
                "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
            },
            {
                "key": "cmd+k alt+cmd+up",
                "command": "editor.action.previousCommentingRange",
                "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
            },
            {
                "key": "cmd+k cmd+u",
                "command": "editor.action.removeCommentLine",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+k f12",
                "command": "editor.action.revealDefinitionAside",
                "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
            },
            {
                "key": "cmd+k cmd+f12",
                "command": "editor.action.revealDefinitionAside",
                "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
            },
            {
                "key": "cmd+k cmd+k",
                "command": "editor.action.selectFromAnchorToCursor",
                "when": "editorTextFocus && selectionAnchorSet"
            },
            {
                "key": "cmd+k cmd+b",
                "command": "editor.action.setSelectionAnchor",
                "when": "editorTextFocus"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "editor.action.showHover",
                "when": "editorTextFocus"
            },
            {
                "key": "cmd+k cmd+x",
                "command": "editor.action.trimTrailingWhitespace",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+k cmd+,",
                "command": "editor.createFoldingRangeFromSelection",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "editor.debug.action.showDebugHover",
                "when": "editorTextFocus && inDebugMode"
            },
            {
                "key": "cmd+k cmd+0",
                "command": "editor.foldAll",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+/",
                "command": "editor.foldAllBlockComments",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+-",
                "command": "editor.foldAllExcept",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+8",
                "command": "editor.foldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+1",
                "command": "editor.foldLevel1",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+2",
                "command": "editor.foldLevel2",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+3",
                "command": "editor.foldLevel3",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+4",
                "command": "editor.foldLevel4",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+5",
                "command": "editor.foldLevel5",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+6",
                "command": "editor.foldLevel6",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+7",
                "command": "editor.foldLevel7",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+[",
                "command": "editor.foldRecursively",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+.",
                "command": "editor.removeManualFoldingRanges",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+l",
                "command": "editor.toggleFold",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k shift+cmd+l",
                "command": "editor.toggleFoldRecursively",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+j",
                "command": "editor.unfoldAll",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+=",
                "command": "editor.unfoldAllExcept",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+9",
                "command": "editor.unfoldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+]",
                "command": "editor.unfoldRecursively",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k f2",
                "command": "togglePeekWidgetFocus",
                "when": "inReferenceSearchEditor || referenceSearchVisible"
            },
            {
                "key": "cmd+k alt+cmd+c",
                "command": "workbench.action.addComment"
            },
            {
                "key": "cmd+k cmd+g",
                "command": "aiFeedback.action.open"
            },
            {
                "key": "cmd+k alt+cmd+c",
                "command": "copyFilePath",
                "when": "editorFocus"
            },
            {
                "key": "cmd+k shift+alt+cmd+c",
                "command": "copyRelativeFilePath",
                "when": "editorFocus"
            },
            {
                "key": "cmd+k cmd+k",
                "command": "editor.action.defineKeybinding",
                "when": "resource == 'vscode-userdata:/Users/yutengjing/Library/Application%20Support/Cursor/User/keybindings.json'"
            },
            {
                "key": "cmd+k i",
                "command": "inlineChat.start",
                "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
            },
            {
                "key": "cmd+k cmd+a",
                "command": "keybindings.editor.addKeybinding",
                "when": "inKeybindings && keybindingFocus"
            },
            {
                "key": "cmd+k cmd+e",
                "command": "keybindings.editor.defineWhenExpression",
                "when": "inKeybindings && keybindingFocus"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "list.showHover",
                "when": "listFocus && !inputFocus && !treestickyScrollFocused"
            },
            {
                "key": "cmd+k i",
                "command": "notebook.cell.chat.start",
                "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
            },
            {
                "key": "cmd+k cmd+c",
                "command": "notebook.cell.collapseCellInput",
                "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
            },
            {
                "key": "cmd+k t",
                "command": "notebook.cell.collapseCellOutput",
                "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
            },
            {
                "key": "cmd+k cmd+c",
                "command": "notebook.cell.expandCellInput",
                "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
            },
            {
                "key": "cmd+k t",
                "command": "notebook.cell.expandCellOutput",
                "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
            },
            {
                "key": "cmd+k shift+cmd+\\",
                "command": "notebook.cell.split",
                "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
            },
            {
                "key": "cmd+k y",
                "command": "notebook.cell.toggleOutputScrolling",
                "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
            },
            {
                "key": "cmd+k shift+cmd+n",
                "command": "notifications.showList"
            },
            {
                "key": "cmd+k cmd+w",
                "command": "workbench.action.closeAllEditors"
            },
            {
                "key": "cmd+k shift+cmd+w",
                "command": "workbench.action.closeAllGroups"
            },
            {
                "key": "cmd+k w",
                "command": "workbench.action.closeEditorsInGroup"
            },
            {
                "key": "cmd+k f",
                "command": "workbench.action.closeFolder",
                "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
            },
            {
                "key": "cmd+k u",
                "command": "workbench.action.closeUnmodifiedEditors"
            },
            {
                "key": "cmd+k shift+o",
                "command": "workbench.action.compareEditor.openSide",
                "when": "inDiffEditor"
            },
            {
                "key": "cmd+k o",
                "command": "workbench.action.copyEditorToNewWindow",
                "when": "activeEditor"
            },
            {
                "key": "cmd+k m",
                "command": "workbench.action.editor.changeLanguageMode",
                "when": "!notebookEditorFocused"
            },
            {
                "key": "cmd+k p",
                "command": "workbench.action.files.copyPathOfActiveFile"
            },
            {
                "key": "cmd+k r",
                "command": "workbench.action.files.revealActiveFileInWindows"
            },
            {
                "key": "cmd+k s",
                "command": "workbench.action.files.saveWithoutFormatting"
            },
            {
                "key": "cmd+k cmd+up",
                "command": "workbench.action.focusAboveGroup"
            },
            {
                "key": "cmd+k cmd+down",
                "command": "workbench.action.focusBelowGroup"
            },
            {
                "key": "cmd+k cmd+left",
                "command": "workbench.action.focusLeftGroup"
            },
            {
                "key": "cmd+k cmd+right",
                "command": "workbench.action.focusRightGroup"
            },
            {
                "key": "cmd+k shift+cmd+\\",
                "command": "workbench.action.joinEditorInGroup",
                "when": "sideBySideEditorActive"
            },
            {
                "key": "cmd+k enter",
                "command": "workbench.action.keepEditor"
            },
            {
                "key": "cmd+k down",
                "command": "workbench.action.moveActiveEditorGroupDown"
            },
            {
                "key": "cmd+k left",
                "command": "workbench.action.moveActiveEditorGroupLeft"
            },
            {
                "key": "cmd+k right",
                "command": "workbench.action.moveActiveEditorGroupRight"
            },
            {
                "key": "cmd+k up",
                "command": "workbench.action.moveActiveEditorGroupUp"
            },
            {
                "key": "cmd+k shift+cmd+left",
                "command": "workbench.action.moveEditorLeftInGroup"
            },
            {
                "key": "cmd+k shift+cmd+right",
                "command": "workbench.action.moveEditorRightInGroup"
            },
            {
                "key": "cmd+k cmd+q",
                "command": "workbench.action.navigateToLastEditLocation"
            },
            {
                "key": "cmd+k alt+cmd+right",
                "command": "workbench.action.nextEditorInGroup"
            },
            {
                "key": "cmd+k cmd+s",
                "command": "workbench.action.openGlobalKeybindings"
            },
            {
                "key": "cmd+k shift+enter",
                "command": "workbench.action.pinEditor",
                "when": "!activeEditorIsPinned"
            },
            {
                "key": "cmd+k alt+cmd+left",
                "command": "workbench.action.previousEditorInGroup"
            },
            {
                "key": "cmd+k cmd+t",
                "command": "workbench.action.selectTheme"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "workbench.action.splitEditorDown"
            },
            {
                "key": "cmd+k shift+cmd+\\",
                "command": "workbench.action.splitEditorInGroup",
                "when": "activeEditorCanSplitInGroup"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "workbench.action.splitEditorLeft"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "workbench.action.splitEditorOrthogonal"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "workbench.action.splitEditorRight"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "workbench.action.splitEditorUp"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "workbench.action.terminal.focusHover",
                "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
            },
            {
                "key": "cmd+k cmd+m",
                "command": "workbench.action.toggleMaximizeEditorGroup",
                "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
            },
            {
                "key": "cmd+k z",
                "command": "workbench.action.toggleZenMode",
                "when": "!isAuxiliaryWindowFocusedContext"
            },
            {
                "key": "cmd+k shift+enter",
                "command": "workbench.action.unpinEditor",
                "when": "activeEditorIsPinned"
            },
            {
                "key": "cmd+k c",
                "command": "workbench.files.action.compareWithClipboard"
            },
            {
                "key": "cmd+k d",
                "command": "workbench.files.action.compareWithSaved"
            },
            {
                "key": "cmd+k e",
                "command": "workbench.files.action.focusOpenEditorsView",
                "when": "workbench.explorer.openEditorsView.active"
            },
            {
                "key": "cmd+k down",
                "command": "views.moveViewDown",
                "when": "focusedView != ''"
            },
            {
                "key": "cmd+k left",
                "command": "views.moveViewLeft",
                "when": "focusedView != ''"
            },
            {
                "key": "cmd+k right",
                "command": "views.moveViewRight",
                "when": "focusedView != ''"
            },
            {
                "key": "cmd+k up",
                "command": "views.moveViewUp",
                "when": "focusedView != ''"
            },
            {
                "key": "cmd+k cmd+c",
                "command": "-editor.action.addCommentLine",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+k cmd+f",
                "command": "-editor.action.formatSelection",
                "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+k cmd+d",
                "command": "-editor.action.moveSelectionToNextFindMatch",
                "when": "editorFocus"
            },
            {
                "key": "cmd+k alt+cmd+down",
                "command": "-editor.action.nextCommentingRange",
                "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
            },
            {
                "key": "cmd+k alt+cmd+up",
                "command": "-editor.action.previousCommentingRange",
                "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
            },
            {
                "key": "cmd+k cmd+u",
                "command": "-editor.action.removeCommentLine",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+k f12",
                "command": "-editor.action.revealDefinitionAside",
                "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
            },
            {
                "key": "cmd+k cmd+f12",
                "command": "-editor.action.revealDefinitionAside",
                "when": "false"
            },
            {
                "key": "cmd+k cmd+k",
                "command": "-editor.action.selectFromAnchorToCursor",
                "when": "editorTextFocus && selectionAnchorSet"
            },
            {
                "key": "cmd+k cmd+b",
                "command": "-editor.action.setSelectionAnchor",
                "when": "editorTextFocus"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "-editor.action.showHover",
                "when": "editorTextFocus"
            },
            {
                "key": "cmd+k cmd+x",
                "command": "-editor.action.trimTrailingWhitespace",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "cmd+k cmd+,",
                "command": "-editor.createFoldingRangeFromSelection",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "-editor.debug.action.showDebugHover",
                "when": "editorTextFocus && inDebugMode"
            },
            {
                "key": "cmd+k cmd+0",
                "command": "-editor.foldAll",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+/",
                "command": "-editor.foldAllBlockComments",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+-",
                "command": "-editor.foldAllExcept",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+8",
                "command": "-editor.foldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+1",
                "command": "-editor.foldLevel1",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+2",
                "command": "-editor.foldLevel2",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+3",
                "command": "-editor.foldLevel3",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+4",
                "command": "-editor.foldLevel4",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+5",
                "command": "-editor.foldLevel5",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+6",
                "command": "-editor.foldLevel6",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+7",
                "command": "-editor.foldLevel7",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+[",
                "command": "-editor.foldRecursively",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+.",
                "command": "-editor.removeManualFoldingRanges",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+l",
                "command": "-editor.toggleFold",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k shift+cmd+l",
                "command": "-editor.toggleFoldRecursively",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+j",
                "command": "-editor.unfoldAll",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+=",
                "command": "-editor.unfoldAllExcept",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+9",
                "command": "-editor.unfoldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k cmd+]",
                "command": "-editor.unfoldRecursively",
                "when": "editorTextFocus && foldingEnabled"
            },
            {
                "key": "cmd+k f2",
                "command": "-togglePeekWidgetFocus",
                "when": "inReferenceSearchEditor || referenceSearchVisible"
            },
            {
                "key": "cmd+k alt+cmd+c",
                "command": "-workbench.action.addComment"
            },
            {
                "key": "cmd+k cmd+g",
                "command": "-aiFeedback.action.open"
            },
            {
                "key": "cmd+k alt+cmd+c",
                "command": "-copyFilePath",
                "when": "editorFocus"
            },
            {
                "key": "cmd+k shift+alt+cmd+c",
                "command": "-copyRelativeFilePath",
                "when": "editorFocus"
            },
            {
                "key": "cmd+k cmd+k",
                "command": "-editor.action.defineKeybinding",
                "when": "resource == 'vscode-userdata:/Users/yutengjing/Library/Application%20Support/Cursor/User/keybindings.json'"
            },
            {
                "key": "cmd+k i",
                "command": "-inlineChat.start",
                "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
            },
            {
                "key": "cmd+k cmd+a",
                "command": "-keybindings.editor.addKeybinding",
                "when": "inKeybindings && keybindingFocus"
            },
            {
                "key": "cmd+k cmd+e",
                "command": "-keybindings.editor.defineWhenExpression",
                "when": "inKeybindings && keybindingFocus"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "-list.showHover",
                "when": "listFocus && !inputFocus && !treestickyScrollFocused"
            },
            {
                "key": "cmd+k i",
                "command": "-notebook.cell.chat.start",
                "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
            },
            {
                "key": "cmd+k cmd+c",
                "command": "-notebook.cell.collapseCellInput",
                "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
            },
            {
                "key": "cmd+k t",
                "command": "-notebook.cell.collapseCellOutput",
                "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
            },
            {
                "key": "cmd+k cmd+c",
                "command": "-notebook.cell.expandCellInput",
                "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
            },
            {
                "key": "cmd+k t",
                "command": "-notebook.cell.expandCellOutput",
                "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
            },
            {
                "key": "cmd+k shift+cmd+\\",
                "command": "-notebook.cell.split",
                "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
            },
            {
                "key": "cmd+k y",
                "command": "-notebook.cell.toggleOutputScrolling",
                "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
            },
            {
                "key": "cmd+k shift+cmd+n",
                "command": "-notifications.showList"
            },
            {
                "key": "cmd+k cmd+w",
                "command": "-workbench.action.closeAllEditors"
            },
            {
                "key": "cmd+k shift+cmd+w",
                "command": "-workbench.action.closeAllGroups"
            },
            {
                "key": "cmd+k w",
                "command": "-workbench.action.closeEditorsInGroup"
            },
            {
                "key": "cmd+k f",
                "command": "-workbench.action.closeFolder",
                "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
            },
            {
                "key": "cmd+k u",
                "command": "-workbench.action.closeUnmodifiedEditors"
            },
            {
                "key": "cmd+k shift+o",
                "command": "-workbench.action.compareEditor.openSide",
                "when": "inDiffEditor"
            },
            {
                "key": "cmd+k o",
                "command": "-workbench.action.copyEditorToNewWindow",
                "when": "activeEditor"
            },
            {
                "key": "cmd+k m",
                "command": "-workbench.action.editor.changeLanguageMode",
                "when": "!notebookEditorFocused"
            },
            {
                "key": "cmd+k p",
                "command": "-workbench.action.files.copyPathOfActiveFile"
            },
            {
                "key": "cmd+k r",
                "command": "-workbench.action.files.revealActiveFileInWindows"
            },
            {
                "key": "cmd+k s",
                "command": "-workbench.action.files.saveWithoutFormatting"
            },
            {
                "key": "cmd+k cmd+up",
                "command": "-workbench.action.focusAboveGroup"
            },
            {
                "key": "cmd+k cmd+down",
                "command": "-workbench.action.focusBelowGroup"
            },
            {
                "key": "cmd+k cmd+left",
                "command": "-workbench.action.focusLeftGroup"
            },
            {
                "key": "cmd+k cmd+right",
                "command": "-workbench.action.focusRightGroup"
            },
            {
                "key": "cmd+k shift+cmd+\\",
                "command": "-workbench.action.joinEditorInGroup",
                "when": "sideBySideEditorActive"
            },
            {
                "key": "cmd+k enter",
                "command": "-workbench.action.keepEditor"
            },
            {
                "key": "cmd+k down",
                "command": "-workbench.action.moveActiveEditorGroupDown"
            },
            {
                "key": "cmd+k left",
                "command": "-workbench.action.moveActiveEditorGroupLeft"
            },
            {
                "key": "cmd+k right",
                "command": "-workbench.action.moveActiveEditorGroupRight"
            },
            {
                "key": "cmd+k up",
                "command": "-workbench.action.moveActiveEditorGroupUp"
            },
            {
                "key": "cmd+k shift+cmd+left",
                "command": "-workbench.action.moveEditorLeftInGroup"
            },
            {
                "key": "cmd+k shift+cmd+right",
                "command": "-workbench.action.moveEditorRightInGroup"
            },
            {
                "key": "cmd+k cmd+q",
                "command": "-workbench.action.navigateToLastEditLocation"
            },
            {
                "key": "cmd+k alt+cmd+right",
                "command": "-workbench.action.nextEditorInGroup"
            },
            {
                "key": "cmd+k cmd+s",
                "command": "-workbench.action.openGlobalKeybindings"
            },
            {
                "key": "cmd+k shift+enter",
                "command": "-workbench.action.pinEditor",
                "when": "!activeEditorIsPinned"
            },
            {
                "key": "cmd+k alt+cmd+left",
                "command": "-workbench.action.previousEditorInGroup"
            },
            {
                "key": "cmd+k cmd+t",
                "command": "-workbench.action.selectTheme"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "-workbench.action.splitEditorDown"
            },
            {
                "key": "cmd+k shift+cmd+\\",
                "command": "-workbench.action.splitEditorInGroup",
                "when": "activeEditorCanSplitInGroup"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "-workbench.action.splitEditorLeft"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "-workbench.action.splitEditorOrthogonal"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "-workbench.action.splitEditorRight"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "-workbench.action.splitEditorUp"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "-workbench.action.terminal.focusHover",
                "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
            },
            {
                "key": "cmd+k cmd+m",
                "command": "-workbench.action.toggleMaximizeEditorGroup",
                "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
            },
            {
                "key": "cmd+k z",
                "command": "-workbench.action.toggleZenMode",
                "when": "!isAuxiliaryWindowFocusedContext"
            },
            {
                "key": "cmd+k shift+enter",
                "command": "-workbench.action.unpinEditor",
                "when": "activeEditorIsPinned"
            },
            {
                "key": "cmd+k c",
                "command": "-workbench.files.action.compareWithClipboard"
            },
            {
                "key": "cmd+k d",
                "command": "-workbench.files.action.compareWithSaved"
            },
            {
                "key": "cmd+k e",
                "command": "-workbench.files.action.focusOpenEditorsView",
                "when": "workbench.explorer.openEditorsView.active"
            },
            {
                "key": "cmd+k down",
                "command": "-views.moveViewDown",
                "when": "focusedView != ''"
            },
            {
                "key": "cmd+k left",
                "command": "-views.moveViewLeft",
                "when": "focusedView != ''"
            },
            {
                "key": "cmd+k right",
                "command": "-views.moveViewRight",
                "when": "focusedView != ''"
            },
            {
                "key": "cmd+k up",
                "command": "-views.moveViewUp",
                "when": "focusedView != ''"
            },
            {
                "key": "shift+cmd+k",
                "command": "-aipopup.action.modal.generate",
                "when": "editorFocus && !composerBarIsVisible && !composerControlPanelIsVisible"
            },
            {
                "key": "cmd+l",
                "command": "-aichat.newchataction"
            },
            {
                "key": "shift+cmd+l",
                "command": "-aichat.insertselectionintochat"
            },
            {
                "key": "cmd+e",
                "command": "aipopup.action.modal.generate",
                "when": "editorFocus && !composerBarIsVisible && !composerControlPanelIsVisible"
            },
            {
                "key": "cmd+]",
                "command": "aichat.newchataction"
            }
        ]
    },
    "eslintConfig": {
        "extends": "@yutengjing/eslint-config-typescript",
        "ignorePatterns": [
            "test-workspace"
        ]
    },
    "prettier": "@yutengjing/prettier-config",
    "lint-staged": {
        "*.{ts,json,md}": [
            "eslint --fix",
            "prettier --write"
        ]
    },
    "simple-git-hooks": {
        "pre-commit": "npx lint-staged"
    },
    "scripts": {
        "vscode:prepublish": "pnpm esbuild:base --minify",
        "preinstall": "npx only-allow pnpm",
        "postinstall": "stale-dep -u",
        "prepare": "simple-git-hooks",
        "clean": "npx rimraf -rf ./out",
        "esbuild:base": "stale-dep && tsx scripts/esbuild.ts",
        "esbuild:watch": "pnpm esbuild:base --sourcemap --watch",
        "esbuild:analyze": "pnpm esbuild:base --minify --metafile --analyze && esbuild-visualizer --metadata ./meta.json --open",
        "compile:test": "pnpm clean && tsc -b ./test/tsconfig.json",
        "lint": "eslint src --ext ts",
        "test": "stale-dep && pnpm compile:test && node ./out/test/runTests.js",
        "package": "vsce package --no-dependencies",
        "release": "npx @yutengjing/release",
        "publish:vs-marketplace": "vsce publish --no-dependencies"
    },
    "devDependencies": {
        "@types/glob": "^8.1.0",
        "@types/mocha": "^10.0.7",
        "@types/node": "~20.16.2",
        "@types/vscode": "1.90.0",
        "@vscode/test-electron": "^2.4.1",
        "@vscode/vsce": "^3.0.0",
        "@yutengjing/eslint-config-typescript": "^1.2.2",
        "@yutengjing/prettier-config": "^1.3.0",
        "@yutengjing/release": "^0.3.1",
        "esbuild": "~0.23.1",
        "esbuild-visualizer": "^0.6.0",
        "eslint": "^8.57.0",
        "glob": "^11.0.0",
        "jsonc-parser": "^3.3.1",
        "lint-staged": "^15.2.9",
        "mocha": "^10.7.3",
        "prettier": "^3.3.3",
        "rimraf": "^6.0.1",
        "simple-git-hooks": "^2.11.1",
        "stale-dep": "^0.7.0",
        "tsx": "^4.19.0",
        "typescript": "~5.5.4"
    }
}
